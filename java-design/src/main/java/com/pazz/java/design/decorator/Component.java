package com.pazz.java.design.decorator;

/**
 * @author: 彭坚
 * @create: 2018/12/24 17:25
 * @description: 装饰器模式：(基础接口)
 * <p>
 * 装饰器的价值在于装饰，他并不影响被装饰类本身的核心功能。在一个继承的体系中，子类通常是互斥的。
 * 比如一辆车，品牌只能要么是奥迪、要么是宝马，不可能同时属于奥迪和宝马，而品牌也是一辆车本身的重要属性特征。
 * 但当你想要给汽车喷漆，换坐垫，或者更换音响时，这些功能是互相可能兼容的，并且他们的存在不会影响车的核心属性：那就是他是一辆什么车。
 * 这时你就可以定义一个装饰器：喷了漆的车。不管他装饰的车是宝马还是奥迪，他的喷漆效果都可以实现。
 */
public interface Component {

    void operation();

}
